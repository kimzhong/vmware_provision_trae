---
################################################################################
# Output Manager Role
#
# This role provides standardized output management across all deployment operations.
# It ensures consistent formatting, structured data output, and seamless integration
# with AAP artifacts and external monitoring systems.
#
# Key Features:
# - Standardized output formatting (JSON, YAML, XML)
# - AAP artifacts integration
# - Multi-format output support
# - Output validation and sanitization
# - Integration with call stack manager
# - Configurable output destinations
#
# Author: VMware Automation Team
# Version: 2.0
# Last Updated: {{ ansible_date_time.iso8601 }}
################################################################################

- name: "Output Manager - Initialize output management"
  debug:
    msg: "Starting output management for component {{ output_current_component | default('unknown') }}"
  tags:
    - always
    - output_manager

- name: "Output Manager - Validate output configuration"
  assert:
    that:
      - output_manager is defined
      - output_manager.formats is defined
      - output_manager.formats | length > 0
    fail_msg: "Output manager configuration is invalid or missing"
    success_msg: "Output manager configuration validated successfully"
  tags:
    - always
    - output_manager
    - validation

- name: "Output Manager - Generate output session ID"
  set_fact:
    output_session_id: "{{ output_manager.session_id_prefix | default('output') }}_{{ ansible_date_time.epoch }}_{{ 999999 | random }}"
  when: output_session_id is not defined
  tags:
    - always
    - output_manager

- name: "Output Manager - Initialize output data structure"
  set_fact:
    output_data:
      session_id: "{{ output_session_id }}"
      timestamp: "{{ ansible_date_time.iso8601 }}"
      component: "{{ output_current_component | default('output_manager') }}"
      call_stack_session_id: "{{ call_stack_session_id | default('') }}"
      call_chain_id: "{{ call_chain_id | default('') }}"
      deployment_context:
        environment: "{{ env | default('unknown') }}"
        location: "{{ location | default('unknown') }}"
        vm_os: "{{ vm_os | default('unknown') }}"
        domain: "{{ domain | default('unknown') }}"
      status: "initialized"
      outputs: []
      metadata:
        ansible_version: "{{ ansible_version.full }}"
        controller_host: "{{ inventory_hostname }}"
        execution_user: "{{ ansible_user_id | default('unknown') }}"
  tags:
    - always
    - output_manager

- name: "Output Manager - Add component output to data structure"
  set_fact:
    output_data: "{{ output_data | combine({
      'outputs': output_data.outputs + [{
        'component': output_current_component | default('output_manager'),
        'timestamp': ansible_date_time.iso8601,
        'data': output_current_data | default({}),
        'format': output_current_format | default('json'),
        'status': 'processed',
        'size_bytes': (output_current_data | default({}) | to_json | length),
        'validation_status': 'pending'
      }],
      'status': 'processing'
    }) }}"
  when: output_current_data is defined
  tags:
    - always
    - output_manager

- name: "Output Manager - Validate output data"
  block:
    - name: "Validate JSON format output"
      set_fact:
        json_validation_result: "{{ output_current_data | to_json | from_json }}"
      when: 
        - output_current_format | default('json') == 'json'
        - output_current_data is defined
      ignore_errors: true
    
    - name: "Validate YAML format output"
      set_fact:
        yaml_validation_result: "{{ output_current_data | to_yaml | from_yaml }}"
      when: 
        - output_current_format | default('json') == 'yaml'
        - output_current_data is defined
      ignore_errors: true
    
    - name: "Update validation status"
      set_fact:
        output_data: "{{ output_data | combine({
          'outputs': output_data.outputs[:-1] + [output_data.outputs[-1] | combine({
            'validation_status': 'valid' if (json_validation_result is defined or yaml_validation_result is defined) else 'invalid'
          })]
        }) }}"
      when: output_current_data is defined
  
  tags:
    - output_manager
    - validation

- name: "Output Manager - Sanitize sensitive data"
  set_fact:
    sanitized_output_data: "{{ output_data | regex_replace(output_manager.sanitization.password_pattern | default('password.*'), 'password: [REDACTED]', ignorecase=True) }}"
  when: 
    - output_manager.sanitization.enabled | default(true)
    - output_data is defined
  tags:
    - output_manager
    - sanitization

- name: "Output Manager - Create output directories"
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ output_manager.json.output_dir | default('/tmp/ansible_outputs') }}"
    - "{{ output_manager.yaml.output_dir | default('/tmp/ansible_outputs') }}"
    - "{{ output_manager.xml.output_dir | default('/tmp/ansible_outputs') }}"
  when: 
    - output_manager.file_output | default(true)
    - item | length > 0
  delegate_to: localhost
  run_once: true
  tags:
    - output_manager
    - file_output

- name: "Output Manager - Generate JSON output"
  copy:
    content: "{{ (sanitized_output_data | default(output_data)) | to_nice_json }}"
    dest: "{{ output_manager.json.output_dir | default('/tmp/ansible_outputs') }}/{{ output_session_id }}_{{ output_current_component | default('output') }}.json"
    mode: '0644'
  when: 
    - output_manager.formats.json.enabled | default(true)
    - output_manager.file_output | default(true)
  delegate_to: localhost
  tags:
    - output_manager
    - json_output

- name: "Output Manager - Generate YAML output"
  copy:
    content: |
      # Output Manager - Component Output
      # Generated: {{ ansible_date_time.iso8601 }}
      # Component: {{ output_current_component | default('output_manager') }}
      # Session: {{ output_session_id }}
      
      {{ (sanitized_output_data | default(output_data)) | to_nice_yaml }}
    dest: "{{ output_manager.yaml.output_dir | default('/tmp/ansible_outputs') }}/{{ output_session_id }}_{{ output_current_component | default('output') }}.yml"
    mode: '0644'
  when: 
    - output_manager.formats.yaml.enabled | default(false)
    - output_manager.file_output | default(true)
  delegate_to: localhost
  tags:
    - output_manager
    - yaml_output

- name: "Output Manager - Generate XML output"
  template:
    src: output.xml.j2
    dest: "{{ output_manager.xml.output_dir | default('/tmp/ansible_outputs') }}/{{ output_session_id }}_{{ output_current_component | default('output') }}.xml"
    mode: '0644'
  when: 
    - output_manager.formats.xml.enabled | default(false)
    - output_manager.file_output | default(true)
  delegate_to: localhost
  tags:
    - output_manager
    - xml_output

- name: "Output Manager - Register output to AAP artifacts"
  set_stats:
    data:
      output_session_id: "{{ output_session_id }}"
      output_component: "{{ output_current_component | default('output_manager') }}"
      output_timestamp: "{{ ansible_date_time.iso8601 }}"
      output_status: "{{ output_data.status }}"
      output_formats_generated: "{{ output_manager.formats | dict2items | selectattr('value.enabled', 'equalto', true) | map(attribute='key') | list }}"
      output_validation_status: "{{ output_data.outputs | map(attribute='validation_status') | list | unique }}"
      output_total_size: "{{ output_data.outputs | map(attribute='size_bytes') | list | sum }}"
      output_data_summary: "{{ output_data }}"
    per_host: false
    aggregate: true
  when: output_manager.artifacts_integration | default(true)
  tags:
    - always
    - output_manager
    - aap_integration

- name: "Output Manager - Send output to external systems"
  uri:
    url: "{{ item.url }}"
    method: "{{ item.method | default('POST') }}"
    body: "{{ (sanitized_output_data | default(output_data)) | to_json }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "{{ item.auth_header | default('') }}"
    status_code: [200, 201, 202]
    timeout: "{{ item.timeout | default(30) }}"
  loop: "{{ output_manager.external_systems | default([]) }}"
  when: 
    - output_manager.external_integration | default(false)
    - item.enabled | default(true)
  ignore_errors: true
  tags:
    - output_manager
    - external_integration

- name: "Output Manager - Update output status to completed"
  set_fact:
    output_data: "{{ output_data | combine({
      'status': 'completed',
      'completion_time': ansible_date_time.iso8601,
      'total_outputs': output_data.outputs | length
    }) }}"
  tags:
    - always
    - output_manager

- name: "Output Manager - Display output summary"
  debug:
    msg:
      - "Output Manager Summary:"
      - "  Session ID: {{ output_session_id }}"
      - "  Component: {{ output_current_component | default('output_manager') }}"
      - "  Status: {{ output_data.status }}"
      - "  Total Outputs: {{ output_data.outputs | length }}"
      - "  Formats Generated: {{ output_manager.formats | dict2items | selectattr('value.enabled', 'equalto', true) | map(attribute='key') | list | join(', ') }}"
      - "  Total Size: {{ output_data.outputs | map(attribute='size_bytes') | list | sum }} bytes"
      - "  Call Stack Integration: {{ 'Enabled' if call_stack_session_id is defined else 'Disabled' }}"
  tags:
    - output_manager
    - debug

- name: "Output Manager - Set global output variables"
  set_fact:
    output_manager_initialized: true
    output_session_active: true
    last_output_session_id: "{{ output_session_id }}"
  tags:
    - always
    - output_manager